@startuml classDiagram

title Circuit Simulation class diagram
right footer "16-06-23 v3.0"

hide empty members

abstract class node as "Node" {
    - inputs : vector<bool>
    - output : bool
    - name : string
    - nextNodes : vector<node*>

    + propagationDelay : int
    + run() : int 
    + setValue(value : bool)
}

class logicFunction as "LogicFunction" {
    - LogicFunction()
    - LogicFunction(id : string)
    - id : string

    + execute(inputs : vector<bool>) : bool
    + getID() : string
    + {virtual} clone() : logicFunction*
}

class circuit as "Circuit" {
    - nodes : vector<node*>;
    - sortedNodes : vector<node*>

    + run() : result
    + sortNodes()
    + {static} createCircuit(fileName : string) : Circuit*
}

class nodeFactory as "NodeFactory" {
    - {static} instance : NodeFactory*
    - NodeFactory()
    + {static} assign(id : string, function : logicFunction*)
    + {static} create(nodeType : string, name : string) : node*
    + {static} getInstance() : NodeFactory*
}

class fileReader as "FileReader" {
    + {static} readFile(fileName : string) : Circuit*
}

class andFunction{
    {static} instance : andFunction*
}

class orFunction{
    {static} instance : orFunction*
}

class notFunction{
    {static} instance : notFunction*
}

class nandFunction{
    {static} instance : nandFunction*
}

class norFunction{
    {static} instance : norFunction*
}

class xorFunction{
    {static} instance : xorFunction*
}

class trueFunction{
    {static} instance : trueFunction*
}

class falseFunction{
    {static} instance : falseFunction*
}

class probeFunction{
    {static} instance : probeFunction*
}

node *-- circuit : nodes
logicFunction -- nodeFactory : functions
node -- nodeFactory

node --* logicFunction : function

andFunction --|> logicFunction
orFunction --|> logicFunction
notFunction --|> logicFunction
nandFunction --|> logicFunction
norFunction --|> logicFunction
xorFunction --|> logicFunction
trueFunction --|> logicFunction
falseFunction --|> logicFunction
probeFunction --|> logicFunction

@enduml